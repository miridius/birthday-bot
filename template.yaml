AWSTemplateFormatVersion: 2010-09-09
Description: >-
  birthday-bot
Transform:
- AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  WebhookFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/webhook.webhook
      Runtime: nodejs18.x
      Description: Webhook to receive updates from the Telegram bot API
      # Increase the RAM to also increase CPU quota. 1769 MB equals 1 full vCPU
      MemorySize: 256
      # HttpApi maximum timeout is 30 sec so the lambda timeout must be < 30
      Timeout: 29
      Environment:
        Variables:
          NODE_ENV: production
          SCHEDULE_LAMBDA_ARN: !GetAtt ScheduledEventFunction.Arn
          SCHEDULE_LAMBDA_ROLE_ARN: !GetAtt LambdaExecuteRole.Arn
      Events:
        Webhook:
          Type: HttpApi # Api also works, but HttpApi is simpler & faster
          Properties:
            Path: /webhook
            Method: POST
      Policies:
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - scheduler:*
              Resource: 'arn:aws:scheduler:eu-west-2:192461062174:schedule/default/*'
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource: !GetAtt LambdaExecuteRole.Arn

  ScheduledEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/webhook.handleSchedule
      Runtime: nodejs18.x
      Description: Function to received scheduled birthday events
      # Increase the RAM to also increase CPU quota. 1769 MB equals 1 full vCPU
      MemorySize: 256
      # HttpApi maximum timeout is 30 sec so the lambda timeout must be < 30
      Timeout: 29
      Environment:
        Variables:
          NODE_ENV: production

  LambdaExecuteRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaRole'
        - 'arn:aws:iam::aws:policy/AWSLambdaExecute'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'scheduler.amazonaws.com'
            Action:
              - 'sts:AssumeRole'

Outputs:
  WebhookApi:
    Description: 'HTTP API endpoint URL for Telegram webhook'
    Value: !Sub 'https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/webhook'

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    LoggingConfig:
      LogFormat: Text
